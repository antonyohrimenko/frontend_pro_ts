import { useState, useEffect } from "react";
import styles from "./homework11.module.css";
import Loader from "../Homework08/Loader";
import MyButton from "../../components/myButton/MyButton";
import FactCard from "./FactCard"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
interface IPhotoFact {
  fact: string;
  url: string;
}

export default function Lesson11(): JSX.Element {
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [photoFacts, setPhotoFacts] = useState<IPhotoFact[]>([]);

  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–∞ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getFactAndPic = async (): Promise<void> => {
    try {
      setIsLoading(true);
      const resFact = await fetch("https://catfact.ninja/fact");
      const dataFact = await resFact.json();

      const resPhoto = await fetch(
        "https://api.thecatapi.com/v1/images/search?size=med&mime_types=jpg&format=json&has_breeds=false&order=RANDOM&page=0&limit=1"
      );
      const dataPhoto = await resPhoto.json();

      setPhotoFacts((prev) => [
        ...prev,
        { fact: dataFact.fact, url: dataPhoto[0].url },
      ]);
    } catch (error) {
      console.error("Error fetching cat fact or image:", error);
    } finally {
      setIsLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–≤–æ–≥–æ —Ñ–∞–∫—Ç–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    getFactAndPic();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
  const handleDelete = (): void => {
    setPhotoFacts([]);
  };

  return (
    <div className={styles.lessonContainer}>
      <h2>Lesson 11: Cat Facts üê±</h2>

      {photoFacts.length > 0 && ( // –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–Ω–µ —Ö–æ—á—É —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Å—Ç–∞–≤–∞–ª—Å—è –ø—É—Å—Ç—ã–º
        // –∏ –∑–∞–Ω–∏–º–∞–ª –º–µ—Å—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —ç—Ç–æ –≤—ã–≥–ª—è–¥–∏—Ç —É–±–æ–≥–æ)
        <div className={styles.factsContainer}>
          {photoFacts.map((card, index) => (
            <FactCard key={index} fact={card.fact} url={card.url} />
          ))}
        </div>
      )}

      {isLoading && <Loader />}

      <div className={styles.buttonContainer}>
        <MyButton func={getFactAndPic} text="GET MORE INFO" />
        {photoFacts.length > 0 && (
          <MyButton func={handleDelete} text="DELETE ALL DATA" />
        )}
      </div>
    </div>
  );
}
