export default function Pdf_task_consultation() {
  // 1) –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é x –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 42 . –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏—Å–≤–æ–∏—Ç—å —ç—Ç–æ–π –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫—É "Hello" . –û–±—ä—è—Å–Ω–∏—Ç–µ, –ø–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞.

  //   let x = 42;
  //   x = "Hello";
  // –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –ø–æ—Ç–æ–º, —á—Ç–æ –≤ 4 —Å—Ç—Ä–æ–∫–µ –º—ã —Å–¥–µ–ª–∞–ª–∏ –Ω–µ—è–≤–Ω—É—é —Ç–∏–ø–∏–∑–∞—Ü–∏—é –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è x —è–≤–ª—è–µ—Ç—Å—è —Ç–∏–ø–æ–º number
  // –∞ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º—ã –ø—ã—Ç–∞–µ–º—Å—è —Å—Ç—Ä–æ–∫–æ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö string. –í TS –ø—Ä–∏ –Ω–µ—è–≤–Ω–æ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ —Ç–∏–ø –ø—Ä–∏—Å–≤–∞–µ—Ç—Å—è
  // –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –∏ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º.

  // 2) –û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é y —Å —Ç–∏–ø–æ–º string . –ü—Ä–∏—Å–≤–æ–π—Ç–µ –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ
  // "TypeScript is awesome!" .

  let ts: string = "TypeScript is awesome!";
  console.log(ts);

  // 3) –æ–∑–¥–∞–π—Ç–µ —Ç–∏–ø Age –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é myAge —ç—Ç–æ–≥–æ —Ç–∏–ø–∞. –ü—Ä–∏—Å–≤–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∑–Ω–∞—á–µ–Ω–∏–µ 30 .

  type Age = number;
  let myAge: Age = 30;
  console.log(myAge);

  // 4) –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é status , –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ —Å—Ç—Ä–æ–∫–æ–π "active" ,
  // –ª–∏–±–æ —á–∏—Å–ª–æ–º 1 . –ü—Ä–∏—Å–≤–æ–π—Ç–µ –µ–π –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–æ—á–µ—Ä–µ–¥–Ω–æ.

  let status: string | number;
  status = "active";
  status = 1;
  console.log(status);

  // 5) –°–æ–∑–¥–∞–π—Ç–µ —Ç–∏–ø Animal —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ "cat" –∏ "dog" . –†–∞—Å—à–∏—Ä—å—Ç–µ —ç—Ç–æ—Ç —Ç–∏–ø, –¥–æ–±–∞–≤–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–µ "parrot" . –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —ç—Ç–æ–≥–æ –Ω–æ–≤–æ–≥–æ —Ç–∏–ø–∞.

  type Animal = "cat" | "dog";
  type extendedAnimal = Animal | "parrot"; // —Ä–∞—Å—à–∏—Ä–∏–ª–∏, –≤—Å–µ –≥—É—Ç

  let pet: extendedAnimal = "cat"; // –≤—ã–±—Ä–∞–ª–∏ –∏–∑ 3 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
  pet = "parrot"; // –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –ø–æ—Ç–µ—Å—Ç–∏–ª–∏
  console.log(pet);

  // 6) –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ fruits , –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏.
  // –î–æ–±–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤ "apple" –∏ "banana" .

  const fruits: string[] = ["apple", "banana"]; // –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ fruits.push()
  console.log(fruits);

  // 7) –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ numbers , –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞. –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —á–∏—Å–ª–∞ 5 –∏ 10 .

  const numbers: number[] = [5, 10]; // –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ numbers.push()
  console.log(numbers);

  //  8) –°–æ–∑–¥–∞–π—Ç–µ —Ç–∏–ø Person —Å –ø–æ–ª—è–º–∏ name (—Å—Ç—Ä–æ–∫–∞) –∏ age (—á–∏—Å–ª–æ). –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç person —ç—Ç–æ–≥–æ —Ç–∏–ø–∞.

  type Person = {
    name: string;
    age: number;
  };

  let somePerson: Person = {
    name: "somePerson",
    age: 35,
  };

  console.log(somePerson);

  // 9) –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Car —Å –ø–æ–ª—è–º–∏ model (—Å—Ç—Ä–æ–∫–∞), year (—á–∏—Å–ª–æ), –∏ isElectric
  // (–±—É–ª–µ–≤–æ). –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

  interface Car {
    model: string;
    year: number;
    isElectric: boolean;
  }

  let myCar: Car = {
    model: "BMW",
    year: 2024,
    isElectric: false,
  };

  console.log(myCar);

  // 10) –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å ElectricCar , –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Car , –¥–æ–±–∞–≤–ª—è—è –ø–æ–ª–µ batteryCapacity (—á–∏—Å–ª–æ). –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

  interface ElectricCar extends Car {
    batteryCapacity: number;
  }

  let myCar2: ElectricCar = {
    batteryCapacity: 1000,
    model: "BMW",
    year: 2020,
    isElectric: true,
  };

  console.log(myCar2);

  // 11) –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Book —Å –ø–æ–ª—è–º–∏ title (—Å—Ç—Ä–æ–∫–∞) –∏ author (—Å—Ç—Ä–æ–∫–∞), –∞ —Ç–∞–∫–∂–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–ª–µ–º publishedYear (—á–∏—Å–ª–æ). –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏ –Ω–µ—É–∫–∞–∑–∞–Ω–Ω—ã–º –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–ª–µ–º.

  interface Book {
    title: string;
    author: string;
    publishedYear?: number;
  }

  let book1: Book = {
    title: "Java for dummies",
    author: "Yakov Fain",
  };

  let book2: Book = {
    title: "Java for dummies",
    author: "Yakov Fain",
    publishedYear: 2005,
  };

  console.log(book1);
  console.log(book2);

  // 12) –°–æ–∑–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å City —Å –ø–æ–ª—è–º–∏ name (—Å—Ç—Ä–æ–∫–∞), population (—á–∏—Å–ª–æ), isCapital (–±—É–ª–µ–≤–æ), –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–ª–µ–º riversName (—Å—Ç—Ä–æ–∫–∞). –°–æ–∑–¥–∞–π—Ç–µ
  // –æ–±—ä–µ–∫—Ç —ç—Ç–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

  // –°–¥–µ–ª–∞–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –Ω–∞ —É—Ä–æ–∫–µ. –°–º–æ—Ç—Ä–µ—Ç—å City.tsx
  // 13)  –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ City :
  // –†–∞—Å—à–∏—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å City , –¥–æ–±–∞–≤–∏–≤ –ø–æ–ª–µ foundationYear (—á–∏—Å–ª–æ). –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.

  // –°–¥–µ–ª–∞–Ω–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ –Ω–∞ —É—Ä–æ–∫–µ. –°–º–æ—Ç—Ä–µ—Ç—å City.tsx

  // 14) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é multiply , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö
  // –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ. –£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø—ã –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è.

  function multiply(x: number, y: number): number {
    return x * y;
  }
  console.log(multiply(10, 5));

  // 15) –ù–∞–ø–∏—à–∏—Ç–µ —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é isEven , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true , –µ—Å–ª–∏ –æ–Ω–æ —á–µ—Ç–Ω–æ–µ, –∏ false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

  const isEven = (number: number): boolean => {
    return number % 2 === 0; //  –º–æ–∂–Ω–æ —á–µ—Ä–µ—Ä–∑ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å ? true : false; –Ω–æ —ç—Ç–æ –∏–∑–±—ã—Ç–æ—á–Ω–æ –Ω–∞ –º–æ–π –≤–∑–≥–ª—è–¥
  };
  console.log(isEven(4));

  //   16) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é greet , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É name –∏ –≤—ã–≤–æ–¥–∏—Ç –≤
  //   –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ. –£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç.

  const greet = (name: string): void => {
    console.log(`Greeting ${name}`!);
  };
  greet("Anton"); // –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª–µ

  //   17) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getLastElement , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

  const getLastElement = (element: number[]): number => {
    return element[element.length - 1];
  };
  console.log(getLastElement([10, 20, 30, 40]));

  //   18) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é describeWeather , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É ( "sun" | "rain"
  //   | "snow" ) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã.

  function describeWeather(typeOfWeather: "sun" | "rain" | "snow"): string {
    return `It's ${typeOfWeather}`;
  }
  console.log(describeWeather("rain"));

  //   19) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é printCarInfo , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Car –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ.

  const printCarInfo = (car: Car) => {
    Object.keys(car).map((key) => {
      console.log(`${key}: ${car[key as keyof Car]}`); // —Å–¥–µ–ª–∞–ª –ø–æ –∫—Ä–∞—Å–æ—Ç–µ (–∫–∞–∫ –±—É–¥—Ç–æ –º—ã –Ω–µ –∑–Ω–∞–µ–º –ø–æ–ª—è –æ–±—å–µ–∫—Ç–∞)
      // –ø–µ—Ä–µ–±–µ—Ä–µ–º –∏ –≤—ã–≤–µ–¥–µ–º –≤—Å–µ, –∑–∞–æ–¥–Ω–æ –∏ map() –ø–æ–≤—Ç–æ—Ä–∏–ª :)
    });
  };

  // —Ç–µ–º —Å–∞–º—ã–º —è —Å–º–æ–≥—É –≤—ã–≤–µ—Å—Ç–∏ 2 –æ–±—å–µ–∫—Ç–∞ —Ä–∞–∑–Ω—ã—Ö (–≥–¥–µ 3 –ø–æ–ª—è –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Car, –∞ —Ç–∞–∫–∂–µ –≥–¥–µ —É –Ω–∞—Å 4 –ø–æ–ª—è extendedCar)

  printCarInfo(myCar);
  printCarInfo(myCar2);

  //   20) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é getFullName , –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ firstName –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ lastName . –ï—Å–ª–∏ lastName –Ω–µ —É–∫–∞–∑–∞–Ω–æ,
  //   –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ firstName.

  function getFullName(firstName: string, lastName?: string): string {
    return lastName ? `${firstName} ${lastName}` : firstName; // —Å —Ç–∞–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–µ –ø–æ–ª—É—á–∏–º undefined –µ—Å–ª–∏ –Ω–µ—Ç lastName
  }
  console.log(getFullName("Anton Okhrimenko"));



  return (
    <div>
      <h2> –î–µ–ª–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –∏–∑ PDF-—Ñ–∞–π–ª–∞ üê£</h2>
    </div>
  );
}
